<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>/****************************************************************************
 Extensions
 
 Extensions add new functionality to an existing class, structure, enumeration, 
 or protocol type. This includes the ability to extend types for which you donâ€™t
 have access to the original source code (known as retroactive modeling).
 
 extension SomeType {
 // new functionality to add to SomeType goes here
 }
 
 extension SomeType: SomeProtocol, AnotherProtocol {
 // implementation of protocol requirements goes here
 }
 
 ****************************************************************************/



extension Double {
    var km: Double { return self * 1_000.0 }
    var m: Double { return self }
    var cm: Double { return self / 100.0 }
    var mm: Double { return self / 1_000.0 }
    var ft: Double { return self / 3.28084 }
}

let oneInch = (25.4).mm
print("One inch is \(oneInch) meters")
let threeFeet = 3.ft
print("Three feet is \(threeFeet) meters")

let aMarathon = 42.km + 195.m
print("A marathon is \(aMarathon) meters long")
















//Methods
extension Int {
    func repetitions(task: () -&gt; Void) {
        for _ in 0..&lt;self {
            task()
        }
    }
}

3.repetitions {
    print("Hello!")
}





extension Int {
    mutating func square() {
        self = self * self
    }
}
var someInt = 3
someInt.square()

print(someInt)
print(someInt.square())











//Subscripts

extension Int {
    subscript(digitIndex: Int) -&gt; Int {
        var decimalBase = 1
        for _ in 0..&lt;digitIndex {
            decimalBase *= 10
        }
        return (self / decimalBase) % 10
    }
}

746381295[0]
746381295[1]




</string>
			<key>ModifiedRange</key>
			<string>{0, 1650}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{0, 0}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
